name: CI CD to dev

on:
  push:
    branches:
      - dev

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          ssh-key: ${{ secrets.SUBMODULE_SSH_KEY }}
          ssh-known-hosts: github.com

      - name: Update submodule to remote HEAD
        run: git submodule update --remote

      - name: Fail if submodule changed
        run: |
          if git diff --exit-code | grep -q 'Subproject'; then
            echo "::error ::서브모듈에 변경 사항이 있습니다."
            exit 1
          fi

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Login to docker
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/brake:dev .

      - name: Push image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/brake:dev

  cd:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          ssh-key: ${{ secrets.SUBMODULE_SSH_KEY }}
          ssh-known-hosts: github.com

      - name: Send env configs to remote
        uses: appleboy/scp-action@master
        with:
          username: ${{ secrets.DEV_USERNAME }}
          host: ${{ secrets.DEV_HOST }}
          key: ${{ secrets.SSH_KEY }}
          source: "./YAPP-ENV/"
          target: "/home/app"

      - name: Send script to remote
        uses: appleboy/scp-action@master
        with:
          username: ${{ secrets.DEV_USERNAME }}
          host: ${{ secrets.DEV_HOST }}
          key: ${{ secrets.SSH_KEY }}
          source: "./scripts/deploy.sh"
          target: "/home/app"

      - name: Send docker-compose to remote
        uses: appleboy/scp-action@master
        with:
          username: ${{ secrets.DEV_USERNAME }}
          host: ${{ secrets.DEV_HOST }}
          key: ${{ secrets.SSH_KEY }}
          source: "./deploy/dev/"
          target: "/home/app"

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.DEV_USERNAME }}
          host: ${{ secrets.DEV_HOST }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/brake:dev
            cp -r /home/app/deploy/dev/* /home/app/deploy/
            rm -rf /home/app/deploy/dev
            cd /home/app/deploy
            chmod 777 ../scripts/deploy.sh
            ../scripts/deploy.sh
            docker image prune -f
